package main

import (
	"testing"
)

// TODO: Test DetectMySQL Function

// TODO: Check parsed sql fields
func TestDecode(t *testing.T) {
	tests := []struct {
		name string
		buf  []byte
		err  bool
	}{
		{
			name: "Normal v8.0.21", // Took this from a packet capture
			buf: []byte{
				0x4a, 0x00, 0x00, 0x00, 0x0a, 0x38, 0x2e, 0x30, 0x2e, 0x32, 0x31, 0x00, 0x10, 0x00, 0x00, 0x00,
				0x38, 0x63, 0x7a, 0x7b, 0x5e, 0x07, 0x6a, 0x39, 0x00, 0xff, 0xff, 0xff, 0x02, 0x00, 0xff, 0xc7,
				0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x38, 0x35, 0x48, 0x50,
				0x68, 0x4c, 0x5c, 0x62, 0x42, 0x0b, 0x4e, 0x00, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f,
				0x73, 0x68, 0x61, 0x32, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x00,
			},
			err: false,
		},
		{
			name: "No data",
			buf:  []byte{},
			err:  true,
		},
		{
			name: "Missing packet data",
			buf:  []byte{0x4a, 0x00, 0x00, 0x00}, // Packet length = 78
			err:  true,
		},
		{
			name: "Protocol version 9", // Modified packet capture (4th byte)
			buf: []byte{
				0x4a, 0x00, 0x00, 0x00, 0x09, 0x38, 0x2e, 0x30, 0x2e, 0x32, 0x31, 0x00, 0x10, 0x00, 0x00, 0x00,
				0x38, 0x63, 0x7a, 0x7b, 0x5e, 0x07, 0x6a, 0x39, 0x00, 0xff, 0xff, 0xff, 0x02, 0x00, 0xff, 0xc7,
				0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x38, 0x35, 0x48, 0x50,
				0x68, 0x4c, 0x5c, 0x62, 0x42, 0x0b, 0x4e, 0x00, 0x63, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f,
				0x73, 0x68, 0x61, 0x32, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x00,
			},
			err: true,
		},
	}

	for _, test := range tests {
		sql := MySQLv10{}
		err := sql.Decode(test.buf)
		if (err != nil) != test.err {
			t.Errorf("Returned error didn't match expected '%s'", test.name)
		}
	}
}
